box: 
  id: node:latest
dev:
  steps:
    - npm-install
    - internal/watch:
        code: node app.js
        reload: true
        
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

docker-build:
  steps:
    - internal/docker-build:
        dockerfile: Dockerfile
        image-name: node-app

    - internal/docker-push: 
        image-name: node-app
        username: $USERNAME # Docker Hub username. When using CLI, set using "export X_USERNAME="  
        password: $PASSWORD # Docker Hub password. When using CLI, set using "export X_PASSWORD=" 
        repository: $USERNAME/$REPO_ADDRESS
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT} , latest

helm-deploy:
  steps:
    - kubectl:
        server: $KUBE_ENDPOINT
        token: $KUBE_USER_TOKEN
        insecure-skip-tls-verify: true
        command: cluster-info
    - script:
        name: helm install
        code: |
          mkdir -p helm
          curl https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-rc.2-linux-amd64.tar.gz | tar zxv -C helm
          mv helm/linux-amd64/helm /usr/local/bin/helm
          helm init -c
    - script:
        name: helm upgrade
        code: helm upgrade --install helm-wercker ./chart-hello
